{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guido\\\\Desktop\\\\Digital Bluee\\\\Calculator\\\\calculator\\\\src\\\\components\\\\Calculator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calculator() {\n  _s();\n  const [expression, setExpression] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const numeros = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  const listaNumeros = numeros.map(numero => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"number\",\n    onClick: () => agregarExpresion(numero),\n    children: numero\n  }, numero, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this));\n  const simbolos = [\"%\", \"x\", \"+\", \"-\", \"=\"];\n  const listaSimbolos = simbolos.map(simbolo => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simbolo\",\n    children: [\" \", \"onClick=\", () => agregarExpresion(simbolo), simbolo]\n  }, simbolo, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this));\n  const agregarExpresion = valor => {\n    setExpression(prevExpression => prevExpression + valor);\n  };\n  const calcularResultado = () => {\n    try {\n      const evalResult = eval(expression.replace(/x/g, \"*\")); // Reemplazar \"x\" con \"*\" para la multiplicación\n      setResult(evalResult);\n    } catch (error) {\n      setResult(\"Error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"numbers\",\n        children: listaNumeros\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"simbolos\",\n        children: listaSimbolos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resultado\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: expression\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"equal\",\n        onClick: calcularResultado,\n        children: \"=\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Calculator, \"qD8vhGpGYac3lKPBKYk2vH2rfAc=\");\n_c = Calculator;\nexport default Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Calculator","_s","expression","setExpression","result","setResult","numeros","listaNumeros","map","numero","className","onClick","agregarExpresion","children","fileName","_jsxFileName","lineNumber","columnNumber","simbolos","listaSimbolos","simbolo","valor","prevExpression","calcularResultado","evalResult","eval","replace","error","_c","$RefreshReg$"],"sources":["C:/Users/guido/Desktop/Digital Bluee/Calculator/calculator/src/components/Calculator.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Calculator() {\r\n  const [expression, setExpression] = useState(\"\");\r\n  const [result, setResult] = useState(\"\");\r\n\r\n  const numeros = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n  const listaNumeros = numeros.map((numero) => (\r\n    <div\r\n      className=\"number\"\r\n      key={numero}\r\n      onClick={() => agregarExpresion(numero)}\r\n    >\r\n      {numero}\r\n    </div>\r\n  ));\r\n\r\n  const simbolos = [\"%\", \"x\", \"+\", \"-\", \"=\"];\r\n  const listaSimbolos = simbolos.map((simbolo) => (\r\n    <div className=\"simbolo\" key={simbolo}>\r\n      {\" \"}\r\n      onClick={() => agregarExpresion(simbolo)}\r\n      {simbolo}\r\n    </div>\r\n  ));\r\n\r\n  const agregarExpresion = (valor) => {\r\n    setExpression((prevExpression) => prevExpression + valor);\r\n  };\r\n\r\n  const calcularResultado = () => {\r\n    try {\r\n      const evalResult = eval(expression.replace(/x/g, \"*\")); // Reemplazar \"x\" con \"*\" para la multiplicación\r\n      setResult(evalResult);\r\n    } catch (error) {\r\n      setResult(\"Error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"calculator\">\r\n        <div className=\"numbers\">{listaNumeros}</div>\r\n        <div className=\"simbolos\">{listaSimbolos}</div>\r\n      </div>\r\n      <div className=\"resultado\">\r\n        <div>{expression}</div>\r\n        <div>{result}</div>\r\n        <div className=\"equal\" onClick={calcularResultado}>\r\n          =\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calculator;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}